pipeline {
    agent any

    stages {
        stage('Clone Repo (opsional)') {
            steps {
                checkout([$class: 'GitSCM',
                    branches: [[name: 'main']],
                    userRemoteConfigs: [
                        [url: 'https://github.com/nicolas5143/tugas_mlops.git']
                    ]
                ])
            }
        }

        stage('Pull Docker Image') {
            steps {
                script {
                    // Pull the already-existing image
                    bat 'docker pull josetaneo/heart-disease-web:latest'
                }
            }
        }

        stage('Deploy Container') {
            steps {
                script {
                    // Stop container if it already exists
                    bat '''
                        docker stop heart-disease-test 2> nul
                        docker rm heart-disease-test 2> nul
                    '''

                    // Run container in detach mode
                    // Mapping port 5000 (containers) to 5000 (Jenkins host)
                    bat 'docker run -d -p 5000:5000 --name heart-disease-test josetaneo/heart-disease-web:latest'

                    // Wait for application to start
                    echo "Waiting for the application to start..."
                    bat 'timeout 10'

                    // Perform health check
                    script {
                        // If application responds with 200, it's up
                        bat 'curl http://localhost:5000'
                        echo "Application is up and running at http://192.168.1.9:5000"
                    }
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    // Uncomment if you want to destroy after the pipeline
                    //bat 'docker stop heart-disease-test'
                    //bat 'docker rm heart-disease-test'
                    echo "Container is left up for manual testing. Access it at http://192.168.1.9:5000"
                }
            }
        }
    }
}
